{
  "{\"sourceRoot\":\"/app/packages/signer-cli/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/app\",\"filename\":\"/app/packages/signer-cli/src/signer.ts\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"fsharp\"}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-typescript\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"isTSX\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/packages/signer-cli/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/app",
      "filename": "/app/packages/signer-cli/src/signer.ts",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "fsharp"
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-typescript",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "isTSX": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/packages/signer-cli/src/signer.ts",
        "plugins": [
          "decorators-legacy",
          "classProperties",
          "classPrivateProperties",
          [
            "pipelineOperator",
            {
              "proposal": "fsharp"
            }
          ],
          "objectRestSpread",
          "optionalChaining",
          "typescript",
          "classProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/packages/signer-cli/src/signer.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/packages/signer-cli/src",
        "sourceFileName": "signer.ts"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _cmdSign = _interopRequireDefault(require(\"./cmdSign\"));\n\nvar _cmdSubmit = _interopRequireDefault(require(\"./cmdSubmit\"));\n\n// Copyright 2019 @polkadot/signer-cli authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\nconst BLOCKTIME = 6;\nconst ONE_MINUTE = 60 / BLOCKTIME;\n\nconst {\n  _: [command, ...params],\n  account,\n  blocks,\n  minutes,\n  seed,\n  type,\n  ws\n} = _yargs.default.usage('Usage: [options] <endpoint> <...params>').usage('Example: submit --account D3AhD...wrx --ws wss://... balances.transfer F7Gh 10000 ').usage('Example: sign --seed \"...\" --account D3AhD...wrx --crypto ed25519 0x123...789').wrap(120).options({\n  account: {\n    description: 'The actual address for the signer',\n    type: 'string',\n    required: true\n  },\n  seed: {\n    description: 'The account seed to use (sign only)',\n    type: 'string'\n  },\n  type: {\n    choices: ['ed25519', 'sr25519'],\n    default: 'sr25519',\n    description: 'The account crypto signature to use (sign only)',\n    type: 'string'\n  },\n  minutes: {\n    description: 'Approximate time for a transction to be signed and submitted before becoming invalid (mortality in minutes)',\n    default: undefined,\n    type: 'number'\n  },\n  blocks: {\n    description: 'Exact number of blocks for a transction to be signed and submitted before becoming invalid (mortality in blocks). Set to 0 for an immortal transaction (not recomended)',\n    default: undefined,\n    type: 'number'\n  },\n  ws: {\n    description: 'The API endpoint to connect to, e.g. wss://poc3-rpc.polkadot.io (submit only)',\n    type: 'string'\n  }\n}).strict().argv; // our main entry point - from here we call out\n// eslint-disable-next-line @typescript-eslint/require-await\n\n\nasync function main() {\n  if (command === 'sign') {\n    return (0, _cmdSign.default)(account, seed || '', type, params);\n  } else if (command === 'submit') {\n    const mortality = minutes != null ? minutes * ONE_MINUTE : blocks;\n    return (0, _cmdSubmit.default)(account, mortality, ws || '', params);\n  }\n\n  throw new Error(\"Unknown command '\".concat(command, \"' found, expected one of 'sign' or 'submit'\"));\n}\n\nmain().catch(error => {\n  console.error(error);\n  process.exit(1);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ25lci50cyJdLCJuYW1lcyI6WyJCTE9DS1RJTUUiLCJPTkVfTUlOVVRFIiwiXyIsImNvbW1hbmQiLCJwYXJhbXMiLCJhY2NvdW50IiwiYmxvY2tzIiwibWludXRlcyIsInNlZWQiLCJ0eXBlIiwid3MiLCJ5YXJncyIsInVzYWdlIiwid3JhcCIsIm9wdGlvbnMiLCJkZXNjcmlwdGlvbiIsInJlcXVpcmVkIiwiY2hvaWNlcyIsImRlZmF1bHQiLCJ1bmRlZmluZWQiLCJzdHJpY3QiLCJhcmd2IiwibWFpbiIsIm1vcnRhbGl0eSIsIkVycm9yIiwiY2F0Y2giLCJlcnJvciIsImNvbnNvbGUiLCJwcm9jZXNzIiwiZXhpdCJdLCJtYXBwaW5ncyI6Ijs7OztBQUlBOztBQUVBOztBQUNBOztBQVBBO0FBQ0E7QUFDQTtBQU9BLE1BQU1BLFNBQVMsR0FBRyxDQUFsQjtBQUNBLE1BQU1DLFVBQVUsR0FBRyxLQUFLRCxTQUF4Qjs7QUFFQSxNQUFNO0FBQUVFLEVBQUFBLENBQUMsRUFBRSxDQUFDQyxPQUFELEVBQVUsR0FBR0MsTUFBYixDQUFMO0FBQTJCQyxFQUFBQSxPQUEzQjtBQUFvQ0MsRUFBQUEsTUFBcEM7QUFBNENDLEVBQUFBLE9BQTVDO0FBQXFEQyxFQUFBQSxJQUFyRDtBQUEyREMsRUFBQUEsSUFBM0Q7QUFBaUVDLEVBQUFBO0FBQWpFLElBQXdFQyxlQUMzRUMsS0FEMkUsQ0FDckUseUNBRHFFLEVBRTNFQSxLQUYyRSxDQUVyRSxvRkFGcUUsRUFHM0VBLEtBSDJFLENBR3JFLCtFQUhxRSxFQUkzRUMsSUFKMkUsQ0FJdEUsR0FKc0UsRUFLM0VDLE9BTDJFLENBS25FO0FBQ1BULEVBQUFBLE9BQU8sRUFBRTtBQUNQVSxJQUFBQSxXQUFXLEVBQUUsbUNBRE47QUFFUE4sSUFBQUEsSUFBSSxFQUFFLFFBRkM7QUFHUE8sSUFBQUEsUUFBUSxFQUFFO0FBSEgsR0FERjtBQU1QUixFQUFBQSxJQUFJLEVBQUU7QUFDSk8sSUFBQUEsV0FBVyxFQUFFLHFDQURUO0FBRUpOLElBQUFBLElBQUksRUFBRTtBQUZGLEdBTkM7QUFVUEEsRUFBQUEsSUFBSSxFQUFFO0FBQ0pRLElBQUFBLE9BQU8sRUFBRSxDQUFDLFNBQUQsRUFBWSxTQUFaLENBREw7QUFFSkMsSUFBQUEsT0FBTyxFQUFFLFNBRkw7QUFHSkgsSUFBQUEsV0FBVyxFQUFFLGlEQUhUO0FBSUpOLElBQUFBLElBQUksRUFBRTtBQUpGLEdBVkM7QUFnQlBGLEVBQUFBLE9BQU8sRUFBRTtBQUNQUSxJQUFBQSxXQUFXLEVBQUUsNkdBRE47QUFFUEcsSUFBQUEsT0FBTyxFQUFFQyxTQUZGO0FBR1BWLElBQUFBLElBQUksRUFBRTtBQUhDLEdBaEJGO0FBcUJQSCxFQUFBQSxNQUFNLEVBQUU7QUFDTlMsSUFBQUEsV0FBVyxFQUFFLHlLQURQO0FBRU5HLElBQUFBLE9BQU8sRUFBRUMsU0FGSDtBQUdOVixJQUFBQSxJQUFJLEVBQUU7QUFIQSxHQXJCRDtBQTBCUEMsRUFBQUEsRUFBRSxFQUFFO0FBQ0ZLLElBQUFBLFdBQVcsRUFBRSwrRUFEWDtBQUVGTixJQUFBQSxJQUFJLEVBQUU7QUFGSjtBQTFCRyxDQUxtRSxFQW9DM0VXLE1BcEMyRSxHQXFDM0VDLElBckNILEMsQ0F1Q0E7QUFDQTs7O0FBQ0EsZUFBZUMsSUFBZixHQUFzQztBQUNwQyxNQUFJbkIsT0FBTyxLQUFLLE1BQWhCLEVBQXdCO0FBQ3RCLFdBQU8sc0JBQVFFLE9BQVIsRUFBaUJHLElBQUksSUFBSSxFQUF6QixFQUE2QkMsSUFBN0IsRUFBZ0RMLE1BQWhELENBQVA7QUFDRCxHQUZELE1BRU8sSUFBSUQsT0FBTyxLQUFLLFFBQWhCLEVBQTBCO0FBQy9CLFVBQU1vQixTQUFTLEdBQUdoQixPQUFPLElBQUksSUFBWCxHQUFrQkEsT0FBTyxHQUFHTixVQUE1QixHQUF5Q0ssTUFBM0Q7QUFDQSxXQUFPLHdCQUFVRCxPQUFWLEVBQW1Ca0IsU0FBbkIsRUFBOEJiLEVBQUUsSUFBSSxFQUFwQyxFQUF3Q04sTUFBeEMsQ0FBUDtBQUNEOztBQUVELFFBQU0sSUFBSW9CLEtBQUosNEJBQThCckIsT0FBOUIsaURBQU47QUFDRDs7QUFFRG1CLElBQUksR0FBR0csS0FBUCxDQUFjQyxLQUFELElBQWlCO0FBQzVCQyxFQUFBQSxPQUFPLENBQUNELEtBQVIsQ0FBY0EsS0FBZDtBQUVBRSxFQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FBYSxDQUFiO0FBQ0QsQ0FKRCIsInNvdXJjZVJvb3QiOiIvYXBwL3BhY2thZ2VzL3NpZ25lci1jbGkvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTkgQHBvbGthZG90L3NpZ25lci1jbGkgYXV0aG9ycyAmIGNvbnRyaWJ1dG9yc1xuLy8gVGhpcyBzb2Z0d2FyZSBtYXkgYmUgbW9kaWZpZWQgYW5kIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtc1xuLy8gb2YgdGhlIEFwYWNoZS0yLjAgbGljZW5zZS4gU2VlIHRoZSBMSUNFTlNFIGZpbGUgZm9yIGRldGFpbHMuXG5cbmltcG9ydCB5YXJncyBmcm9tICd5YXJncyc7XG5cbmltcG9ydCBjbWRTaWduIGZyb20gJy4vY21kU2lnbic7XG5pbXBvcnQgY21kU3VibWl0IGZyb20gJy4vY21kU3VibWl0JztcblxuY29uc3QgQkxPQ0tUSU1FID0gNjtcbmNvbnN0IE9ORV9NSU5VVEUgPSA2MCAvIEJMT0NLVElNRTtcblxuY29uc3QgeyBfOiBbY29tbWFuZCwgLi4ucGFyYW1zXSwgYWNjb3VudCwgYmxvY2tzLCBtaW51dGVzLCBzZWVkLCB0eXBlLCB3cyB9ID0geWFyZ3NcbiAgLnVzYWdlKCdVc2FnZTogW29wdGlvbnNdIDxlbmRwb2ludD4gPC4uLnBhcmFtcz4nKVxuICAudXNhZ2UoJ0V4YW1wbGU6IHN1Ym1pdCAtLWFjY291bnQgRDNBaEQuLi53cnggLS13cyB3c3M6Ly8uLi4gYmFsYW5jZXMudHJhbnNmZXIgRjdHaCAxMDAwMCAnKVxuICAudXNhZ2UoJ0V4YW1wbGU6IHNpZ24gLS1zZWVkIFwiLi4uXCIgLS1hY2NvdW50IEQzQWhELi4ud3J4IC0tY3J5cHRvIGVkMjU1MTkgMHgxMjMuLi43ODknKVxuICAud3JhcCgxMjApXG4gIC5vcHRpb25zKHtcbiAgICBhY2NvdW50OiB7XG4gICAgICBkZXNjcmlwdGlvbjogJ1RoZSBhY3R1YWwgYWRkcmVzcyBmb3IgdGhlIHNpZ25lcicsXG4gICAgICB0eXBlOiAnc3RyaW5nJyxcbiAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICBzZWVkOiB7XG4gICAgICBkZXNjcmlwdGlvbjogJ1RoZSBhY2NvdW50IHNlZWQgdG8gdXNlIChzaWduIG9ubHkpJyxcbiAgICAgIHR5cGU6ICdzdHJpbmcnXG4gICAgfSxcbiAgICB0eXBlOiB7XG4gICAgICBjaG9pY2VzOiBbJ2VkMjU1MTknLCAnc3IyNTUxOSddLFxuICAgICAgZGVmYXVsdDogJ3NyMjU1MTknLFxuICAgICAgZGVzY3JpcHRpb246ICdUaGUgYWNjb3VudCBjcnlwdG8gc2lnbmF0dXJlIHRvIHVzZSAoc2lnbiBvbmx5KScsXG4gICAgICB0eXBlOiAnc3RyaW5nJ1xuICAgIH0sXG4gICAgbWludXRlczoge1xuICAgICAgZGVzY3JpcHRpb246ICdBcHByb3hpbWF0ZSB0aW1lIGZvciBhIHRyYW5zY3Rpb24gdG8gYmUgc2lnbmVkIGFuZCBzdWJtaXR0ZWQgYmVmb3JlIGJlY29taW5nIGludmFsaWQgKG1vcnRhbGl0eSBpbiBtaW51dGVzKScsXG4gICAgICBkZWZhdWx0OiB1bmRlZmluZWQgYXMgbnVtYmVyIHwgdW5kZWZpbmVkLFxuICAgICAgdHlwZTogJ251bWJlcidcbiAgICB9LFxuICAgIGJsb2Nrczoge1xuICAgICAgZGVzY3JpcHRpb246ICdFeGFjdCBudW1iZXIgb2YgYmxvY2tzIGZvciBhIHRyYW5zY3Rpb24gdG8gYmUgc2lnbmVkIGFuZCBzdWJtaXR0ZWQgYmVmb3JlIGJlY29taW5nIGludmFsaWQgKG1vcnRhbGl0eSBpbiBibG9ja3MpLiBTZXQgdG8gMCBmb3IgYW4gaW1tb3J0YWwgdHJhbnNhY3Rpb24gKG5vdCByZWNvbWVuZGVkKScsXG4gICAgICBkZWZhdWx0OiB1bmRlZmluZWQgYXMgbnVtYmVyIHwgdW5kZWZpbmVkLFxuICAgICAgdHlwZTogJ251bWJlcidcbiAgICB9LFxuICAgIHdzOiB7XG4gICAgICBkZXNjcmlwdGlvbjogJ1RoZSBBUEkgZW5kcG9pbnQgdG8gY29ubmVjdCB0bywgZS5nLiB3c3M6Ly9wb2MzLXJwYy5wb2xrYWRvdC5pbyAoc3VibWl0IG9ubHkpJyxcbiAgICAgIHR5cGU6ICdzdHJpbmcnXG4gICAgfVxuICB9KVxuICAuc3RyaWN0KClcbiAgLmFyZ3Y7XG5cbi8vIG91ciBtYWluIGVudHJ5IHBvaW50IC0gZnJvbSBoZXJlIHdlIGNhbGwgb3V0XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3JlcXVpcmUtYXdhaXRcbmFzeW5jIGZ1bmN0aW9uIG1haW4gKCk6IFByb21pc2U8dm9pZD4ge1xuICBpZiAoY29tbWFuZCA9PT0gJ3NpZ24nKSB7XG4gICAgcmV0dXJuIGNtZFNpZ24oYWNjb3VudCwgc2VlZCB8fCAnJywgdHlwZSBhcyAnZWQyNTUxOScsIHBhcmFtcyk7XG4gIH0gZWxzZSBpZiAoY29tbWFuZCA9PT0gJ3N1Ym1pdCcpIHtcbiAgICBjb25zdCBtb3J0YWxpdHkgPSBtaW51dGVzICE9IG51bGwgPyBtaW51dGVzICogT05FX01JTlVURSA6IGJsb2NrcztcbiAgICByZXR1cm4gY21kU3VibWl0KGFjY291bnQsIG1vcnRhbGl0eSwgd3MgfHwgJycsIHBhcmFtcyk7XG4gIH1cblxuICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY29tbWFuZCAnJHtjb21tYW5kfScgZm91bmQsIGV4cGVjdGVkIG9uZSBvZiAnc2lnbicgb3IgJ3N1Ym1pdCdgKTtcbn1cblxubWFpbigpLmNhdGNoKChlcnJvcik6IHZvaWQgPT4ge1xuICBjb25zb2xlLmVycm9yKGVycm9yKTtcblxuICBwcm9jZXNzLmV4aXQoMSk7XG59KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "signer.ts"
      ],
      "names": [
        "BLOCKTIME",
        "ONE_MINUTE",
        "_",
        "command",
        "params",
        "account",
        "blocks",
        "minutes",
        "seed",
        "type",
        "ws",
        "yargs",
        "usage",
        "wrap",
        "options",
        "description",
        "required",
        "choices",
        "default",
        "undefined",
        "strict",
        "argv",
        "main",
        "mortality",
        "Error",
        "catch",
        "error",
        "console",
        "process",
        "exit"
      ],
      "mappings": ";;;;AAIA;;AAEA;;AACA;;AAPA;AACA;AACA;AAOA,MAAMA,SAAS,GAAG,CAAlB;AACA,MAAMC,UAAU,GAAG,KAAKD,SAAxB;;AAEA,MAAM;AAAEE,EAAAA,CAAC,EAAE,CAACC,OAAD,EAAU,GAAGC,MAAb,CAAL;AAA2BC,EAAAA,OAA3B;AAAoCC,EAAAA,MAApC;AAA4CC,EAAAA,OAA5C;AAAqDC,EAAAA,IAArD;AAA2DC,EAAAA,IAA3D;AAAiEC,EAAAA;AAAjE,IAAwEC,eAC3EC,KAD2E,CACrE,yCADqE,EAE3EA,KAF2E,CAErE,oFAFqE,EAG3EA,KAH2E,CAGrE,+EAHqE,EAI3EC,IAJ2E,CAItE,GAJsE,EAK3EC,OAL2E,CAKnE;AACPT,EAAAA,OAAO,EAAE;AACPU,IAAAA,WAAW,EAAE,mCADN;AAEPN,IAAAA,IAAI,EAAE,QAFC;AAGPO,IAAAA,QAAQ,EAAE;AAHH,GADF;AAMPR,EAAAA,IAAI,EAAE;AACJO,IAAAA,WAAW,EAAE,qCADT;AAEJN,IAAAA,IAAI,EAAE;AAFF,GANC;AAUPA,EAAAA,IAAI,EAAE;AACJQ,IAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,SAAZ,CADL;AAEJC,IAAAA,OAAO,EAAE,SAFL;AAGJH,IAAAA,WAAW,EAAE,iDAHT;AAIJN,IAAAA,IAAI,EAAE;AAJF,GAVC;AAgBPF,EAAAA,OAAO,EAAE;AACPQ,IAAAA,WAAW,EAAE,6GADN;AAEPG,IAAAA,OAAO,EAAEC,SAFF;AAGPV,IAAAA,IAAI,EAAE;AAHC,GAhBF;AAqBPH,EAAAA,MAAM,EAAE;AACNS,IAAAA,WAAW,EAAE,yKADP;AAENG,IAAAA,OAAO,EAAEC,SAFH;AAGNV,IAAAA,IAAI,EAAE;AAHA,GArBD;AA0BPC,EAAAA,EAAE,EAAE;AACFK,IAAAA,WAAW,EAAE,+EADX;AAEFN,IAAAA,IAAI,EAAE;AAFJ;AA1BG,CALmE,EAoC3EW,MApC2E,GAqC3EC,IArCH,C,CAuCA;AACA;;;AACA,eAAeC,IAAf,GAAsC;AACpC,MAAInB,OAAO,KAAK,MAAhB,EAAwB;AACtB,WAAO,sBAAQE,OAAR,EAAiBG,IAAI,IAAI,EAAzB,EAA6BC,IAA7B,EAAgDL,MAAhD,CAAP;AACD,GAFD,MAEO,IAAID,OAAO,KAAK,QAAhB,EAA0B;AAC/B,UAAMoB,SAAS,GAAGhB,OAAO,IAAI,IAAX,GAAkBA,OAAO,GAAGN,UAA5B,GAAyCK,MAA3D;AACA,WAAO,wBAAUD,OAAV,EAAmBkB,SAAnB,EAA8Bb,EAAE,IAAI,EAApC,EAAwCN,MAAxC,CAAP;AACD;;AAED,QAAM,IAAIoB,KAAJ,4BAA8BrB,OAA9B,iDAAN;AACD;;AAEDmB,IAAI,GAAGG,KAAP,CAAcC,KAAD,IAAiB;AAC5BC,EAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AAEAE,EAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD,CAJD",
      "sourceRoot": "/app/packages/signer-cli/src",
      "sourcesContent": [
        "// Copyright 2019 @polkadot/signer-cli authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport yargs from 'yargs';\n\nimport cmdSign from './cmdSign';\nimport cmdSubmit from './cmdSubmit';\n\nconst BLOCKTIME = 6;\nconst ONE_MINUTE = 60 / BLOCKTIME;\n\nconst { _: [command, ...params], account, blocks, minutes, seed, type, ws } = yargs\n  .usage('Usage: [options] <endpoint> <...params>')\n  .usage('Example: submit --account D3AhD...wrx --ws wss://... balances.transfer F7Gh 10000 ')\n  .usage('Example: sign --seed \"...\" --account D3AhD...wrx --crypto ed25519 0x123...789')\n  .wrap(120)\n  .options({\n    account: {\n      description: 'The actual address for the signer',\n      type: 'string',\n      required: true\n    },\n    seed: {\n      description: 'The account seed to use (sign only)',\n      type: 'string'\n    },\n    type: {\n      choices: ['ed25519', 'sr25519'],\n      default: 'sr25519',\n      description: 'The account crypto signature to use (sign only)',\n      type: 'string'\n    },\n    minutes: {\n      description: 'Approximate time for a transction to be signed and submitted before becoming invalid (mortality in minutes)',\n      default: undefined as number | undefined,\n      type: 'number'\n    },\n    blocks: {\n      description: 'Exact number of blocks for a transction to be signed and submitted before becoming invalid (mortality in blocks). Set to 0 for an immortal transaction (not recomended)',\n      default: undefined as number | undefined,\n      type: 'number'\n    },\n    ws: {\n      description: 'The API endpoint to connect to, e.g. wss://poc3-rpc.polkadot.io (submit only)',\n      type: 'string'\n    }\n  })\n  .strict()\n  .argv;\n\n// our main entry point - from here we call out\n// eslint-disable-next-line @typescript-eslint/require-await\nasync function main (): Promise<void> {\n  if (command === 'sign') {\n    return cmdSign(account, seed || '', type as 'ed25519', params);\n  } else if (command === 'submit') {\n    const mortality = minutes != null ? minutes * ONE_MINUTE : blocks;\n    return cmdSubmit(account, mortality, ws || '', params);\n  }\n\n  throw new Error(`Unknown command '${command}' found, expected one of 'sign' or 'submit'`);\n}\n\nmain().catch((error): void => {\n  console.error(error);\n\n  process.exit(1);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572903409000
  },
  "{\"sourceRoot\":\"/app/packages/signer-cli/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/app\",\"filename\":\"/app/packages/signer-cli/src/cmdSign.ts\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"fsharp\"}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-typescript\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"isTSX\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/packages/signer-cli/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/app",
      "filename": "/app/packages/signer-cli/src/cmdSign.ts",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "fsharp"
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-typescript",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "isTSX": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/packages/signer-cli/src/cmdSign.ts",
        "plugins": [
          "decorators-legacy",
          "classProperties",
          "classPrivateProperties",
          [
            "pipelineOperator",
            {
              "proposal": "fsharp"
            }
          ],
          "objectRestSpread",
          "optionalChaining",
          "typescript",
          "classProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/packages/signer-cli/src/cmdSign.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/packages/signer-cli/src",
        "sourceFileName": "cmdSign.ts"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cmdSign;\n\nvar _keyring = require(\"@polkadot/keyring\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\n\n// Copyright 2019 @polkadot/signer-cli authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\nconst curvePrefixes = {\n  ed25519: [0],\n  sr25519: [1]\n};\n\nasync function cmdSign(account, seed, type, _ref) {\n  let [payload] = _ref;\n  await (0, _utilCrypto.cryptoWaitReady)();\n  const keyring = new _keyring.Keyring({\n    type\n  });\n  const pair = keyring.createFromUri(seed);\n  const signature = pair.sign((0, _util.hexToU8a)(payload));\n  const prefix = new Uint8Array(curvePrefixes[type]);\n  console.log(\"Signature: \".concat((0, _util.u8aToHex)((0, _util.u8aConcat)(prefix, signature))));\n  process.exit(0);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNtZFNpZ24udHMiXSwibmFtZXMiOlsiY3VydmVQcmVmaXhlcyIsImVkMjU1MTkiLCJzcjI1NTE5IiwiY21kU2lnbiIsImFjY291bnQiLCJzZWVkIiwidHlwZSIsInBheWxvYWQiLCJrZXlyaW5nIiwiS2V5cmluZyIsInBhaXIiLCJjcmVhdGVGcm9tVXJpIiwic2lnbmF0dXJlIiwic2lnbiIsInByZWZpeCIsIlVpbnQ4QXJyYXkiLCJjb25zb2xlIiwibG9nIiwicHJvY2VzcyIsImV4aXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFJQTs7QUFDQTs7QUFDQTs7QUFOQTtBQUNBO0FBQ0E7QUFRQSxNQUFNQSxhQUEyQyxHQUFHO0FBQ2xEQyxFQUFBQSxPQUFPLEVBQUUsQ0FBQyxDQUFELENBRHlDO0FBRWxEQyxFQUFBQSxPQUFPLEVBQUUsQ0FBQyxDQUFEO0FBRnlDLENBQXBEOztBQUtlLGVBQWVDLE9BQWYsQ0FBd0JDLE9BQXhCLEVBQXlDQyxJQUF6QyxFQUF1REMsSUFBdkQsUUFBeUc7QUFBQSxNQUFwQyxDQUFDQyxPQUFELENBQW9DO0FBQ3RILFFBQU0sa0NBQU47QUFFQSxRQUFNQyxPQUFPLEdBQUcsSUFBSUMsZ0JBQUosQ0FBWTtBQUFFSCxJQUFBQTtBQUFGLEdBQVosQ0FBaEI7QUFDQSxRQUFNSSxJQUFJLEdBQUdGLE9BQU8sQ0FBQ0csYUFBUixDQUFzQk4sSUFBdEIsQ0FBYjtBQUNBLFFBQU1PLFNBQVMsR0FBR0YsSUFBSSxDQUFDRyxJQUFMLENBQVUsb0JBQVNOLE9BQVQsQ0FBVixDQUFsQjtBQUVBLFFBQU1PLE1BQU0sR0FBRyxJQUFJQyxVQUFKLENBQWVmLGFBQWEsQ0FBQ00sSUFBRCxDQUE1QixDQUFmO0FBRUFVLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixzQkFBMEIsb0JBQVMscUJBQVVILE1BQVYsRUFBa0JGLFNBQWxCLENBQVQsQ0FBMUI7QUFFQU0sRUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWEsQ0FBYjtBQUNEIiwic291cmNlUm9vdCI6Ii9hcHAvcGFja2FnZXMvc2lnbmVyLWNsaS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgMjAxOSBAcG9sa2Fkb3Qvc2lnbmVyLWNsaSBhdXRob3JzICYgY29udHJpYnV0b3JzXG4vLyBUaGlzIHNvZnR3YXJlIG1heSBiZSBtb2RpZmllZCBhbmQgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zXG4vLyBvZiB0aGUgQXBhY2hlLTIuMCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBmb3IgZGV0YWlscy5cblxuaW1wb3J0IHsgS2V5cmluZyB9IGZyb20gJ0Bwb2xrYWRvdC9rZXlyaW5nJztcbmltcG9ydCB7IGhleFRvVThhLCB1OGFUb0hleCwgdThhQ29uY2F0IH0gZnJvbSAnQHBvbGthZG90L3V0aWwnO1xuaW1wb3J0IHsgY3J5cHRvV2FpdFJlYWR5IH0gZnJvbSAnQHBvbGthZG90L3V0aWwtY3J5cHRvJztcblxudHlwZSBDdXJ2ZXMgPSAnZWQyNTUxOScgfCAnc3IyNTUxOSc7XG5cbmNvbnN0IGN1cnZlUHJlZml4ZXM6IHtba2V5IGluIEN1cnZlc106IFtudW1iZXJdIH0gPSB7XG4gIGVkMjU1MTk6IFswXSxcbiAgc3IyNTUxOTogWzFdXG59O1xuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBjbWRTaWduIChhY2NvdW50OiBzdHJpbmcsIHNlZWQ6IHN0cmluZywgdHlwZTogQ3VydmVzLCBbcGF5bG9hZF06IHN0cmluZ1tdKTogUHJvbWlzZTx2b2lkPiB7XG4gIGF3YWl0IGNyeXB0b1dhaXRSZWFkeSgpO1xuXG4gIGNvbnN0IGtleXJpbmcgPSBuZXcgS2V5cmluZyh7IHR5cGUgfSk7XG4gIGNvbnN0IHBhaXIgPSBrZXlyaW5nLmNyZWF0ZUZyb21Vcmkoc2VlZCk7XG4gIGNvbnN0IHNpZ25hdHVyZSA9IHBhaXIuc2lnbihoZXhUb1U4YShwYXlsb2FkKSk7XG5cbiAgY29uc3QgcHJlZml4ID0gbmV3IFVpbnQ4QXJyYXkoY3VydmVQcmVmaXhlc1t0eXBlXSk7XG5cbiAgY29uc29sZS5sb2coYFNpZ25hdHVyZTogJHt1OGFUb0hleCh1OGFDb25jYXQocHJlZml4LCBzaWduYXR1cmUpKX1gKTtcblxuICBwcm9jZXNzLmV4aXQoMCk7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "cmdSign.ts"
      ],
      "names": [
        "curvePrefixes",
        "ed25519",
        "sr25519",
        "cmdSign",
        "account",
        "seed",
        "type",
        "payload",
        "keyring",
        "Keyring",
        "pair",
        "createFromUri",
        "signature",
        "sign",
        "prefix",
        "Uint8Array",
        "console",
        "log",
        "process",
        "exit"
      ],
      "mappings": ";;;;;;;AAIA;;AACA;;AACA;;AANA;AACA;AACA;AAQA,MAAMA,aAA2C,GAAG;AAClDC,EAAAA,OAAO,EAAE,CAAC,CAAD,CADyC;AAElDC,EAAAA,OAAO,EAAE,CAAC,CAAD;AAFyC,CAApD;;AAKe,eAAeC,OAAf,CAAwBC,OAAxB,EAAyCC,IAAzC,EAAuDC,IAAvD,QAAyG;AAAA,MAApC,CAACC,OAAD,CAAoC;AACtH,QAAM,kCAAN;AAEA,QAAMC,OAAO,GAAG,IAAIC,gBAAJ,CAAY;AAAEH,IAAAA;AAAF,GAAZ,CAAhB;AACA,QAAMI,IAAI,GAAGF,OAAO,CAACG,aAAR,CAAsBN,IAAtB,CAAb;AACA,QAAMO,SAAS,GAAGF,IAAI,CAACG,IAAL,CAAU,oBAASN,OAAT,CAAV,CAAlB;AAEA,QAAMO,MAAM,GAAG,IAAIC,UAAJ,CAAef,aAAa,CAACM,IAAD,CAA5B,CAAf;AAEAU,EAAAA,OAAO,CAACC,GAAR,sBAA0B,oBAAS,qBAAUH,MAAV,EAAkBF,SAAlB,CAAT,CAA1B;AAEAM,EAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD",
      "sourceRoot": "/app/packages/signer-cli/src",
      "sourcesContent": [
        "// Copyright 2019 @polkadot/signer-cli authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { Keyring } from '@polkadot/keyring';\nimport { hexToU8a, u8aToHex, u8aConcat } from '@polkadot/util';\nimport { cryptoWaitReady } from '@polkadot/util-crypto';\n\ntype Curves = 'ed25519' | 'sr25519';\n\nconst curvePrefixes: {[key in Curves]: [number] } = {\n  ed25519: [0],\n  sr25519: [1]\n};\n\nexport default async function cmdSign (account: string, seed: string, type: Curves, [payload]: string[]): Promise<void> {\n  await cryptoWaitReady();\n\n  const keyring = new Keyring({ type });\n  const pair = keyring.createFromUri(seed);\n  const signature = pair.sign(hexToU8a(payload));\n\n  const prefix = new Uint8Array(curvePrefixes[type]);\n\n  console.log(`Signature: ${u8aToHex(u8aConcat(prefix, signature))}`);\n\n  process.exit(0);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572489689000
  },
  "{\"sourceRoot\":\"/app/packages/signer-cli/src\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/app\",\"filename\":\"/app/packages/signer-cli/src/cmdSubmit.ts\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/app\",\"plugins\":[{\"key\":\"proposal-decorators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]}},\"options\":{\"legacy\":true}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]}},\"options\":{\"loose\":true}},{\"key\":\"proposal-pipeline-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"proposal\":\"fsharp\"}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-runtime\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"MemberExpression\":{\"enter\":[null],\"exit\":[null]},\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"transform-typescript\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"RestElement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"ExportSpecifier\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"TSDeclareFunction\":{\"enter\":[null]},\"TSDeclareMethod\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"VariableDeclarator\":{\"enter\":[null]},\"TSIndexSignature\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null,null]},\"TSModuleDeclaration\":{\"enter\":[null]},\"TSInterfaceDeclaration\":{\"enter\":[null]},\"TSTypeAliasDeclaration\":{\"enter\":[null]},\"TSEnumDeclaration\":{\"enter\":[null]},\"TSImportEqualsDeclaration\":{\"enter\":[null]},\"TSExportAssignment\":{\"enter\":[null]},\"TSTypeAssertion\":{\"enter\":[null]},\"TSAsExpression\":{\"enter\":[null]},\"TSNonNullExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"JSXOpeningElement\":{\"enter\":[null]},\"TaggedTemplateExpression\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"isTSX\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/app/packages/signer-cli/src",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/app",
      "filename": "/app/packages/signer-cli/src/cmdSubmit.ts",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/app",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-decorators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "legacy": true
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": true
          }
        },
        {
          "key": "proposal-pipeline-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "proposal": "fsharp"
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-runtime",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "MemberExpression": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "transform-typescript",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "RestElement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "ExportSpecifier": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "TSDeclareFunction": {
              "enter": [
                null
              ]
            },
            "TSDeclareMethod": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "TSIndexSignature": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null,
                null
              ]
            },
            "TSModuleDeclaration": {
              "enter": [
                null
              ]
            },
            "TSInterfaceDeclaration": {
              "enter": [
                null
              ]
            },
            "TSTypeAliasDeclaration": {
              "enter": [
                null
              ]
            },
            "TSEnumDeclaration": {
              "enter": [
                null
              ]
            },
            "TSImportEqualsDeclaration": {
              "enter": [
                null
              ]
            },
            "TSExportAssignment": {
              "enter": [
                null
              ]
            },
            "TSTypeAssertion": {
              "enter": [
                null
              ]
            },
            "TSAsExpression": {
              "enter": [
                null
              ]
            },
            "TSNonNullExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "JSXOpeningElement": {
              "enter": [
                null
              ]
            },
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "isTSX": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/app/packages/signer-cli/src/cmdSubmit.ts",
        "plugins": [
          "decorators-legacy",
          "classProperties",
          "classPrivateProperties",
          [
            "pipelineOperator",
            {
              "proposal": "fsharp"
            }
          ],
          "objectRestSpread",
          "optionalChaining",
          "typescript",
          "classProperties",
          "objectRestSpread",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/app/packages/signer-cli/src/cmdSubmit.ts",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/app/packages/signer-cli/src",
        "sourceFileName": "cmdSubmit.ts"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cmdSubmit;\n\nvar _readline = _interopRequireDefault(require(\"readline\"));\n\nvar _api = require(\"@polkadot/api\");\n\nvar _util = require(\"@polkadot/util\");\n\n// Copyright 2019 @polkadot/signer-cli authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\nclass RawSigner {\n  async signRaw(_ref) {\n    let {\n      data\n    } = _ref;\n\n    const rl = _readline.default.createInterface({\n      input: process.stdin,\n      output: process.stdout\n    });\n\n    return new Promise(resolve => {\n      rl.question(\"Payload: \".concat(data, \"\\nSignature> \"), signature => {\n        resolve({\n          id: 1,\n          signature\n        });\n        rl.close();\n      });\n    });\n  }\n\n}\n\nasync function cmdSubmit(account, blocks, endpoint, _ref2) {\n  let [tx, ...params] = _ref2;\n  const signer = new RawSigner();\n  const provider = new _api.WsProvider(endpoint);\n  const api = await _api.ApiPromise.create({\n    provider,\n    signer\n  });\n  const [section, method] = tx.split('.');\n  (0, _util.assert)(api.tx[section] && api.tx[section][method], \"Unable to find method \".concat(section, \".\").concat(method));\n  const options = {};\n\n  if (blocks === 0) {\n    options.era = 0;\n  } else if (blocks != null) {\n    // Get current block if we want to modify the number of blocks we have to sign\n    const signedBlock = await api.rpc.chain.getBlock();\n    options.blockHash = signedBlock.block.header.hash;\n    options.era = api.createType('ExtrinsicEra', {\n      current: signedBlock.block.header.number,\n      period: blocks\n    });\n  }\n\n  await api.tx[section][method](...params).signAndSend(account, options, result => {\n    console.log(JSON.stringify(result));\n\n    if (result.isFinalized) {\n      process.exit(0);\n    }\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNtZFN1Ym1pdC50cyJdLCJuYW1lcyI6WyJSYXdTaWduZXIiLCJzaWduUmF3IiwiZGF0YSIsInJsIiwicmVhZGxpbmUiLCJjcmVhdGVJbnRlcmZhY2UiLCJpbnB1dCIsInByb2Nlc3MiLCJzdGRpbiIsIm91dHB1dCIsInN0ZG91dCIsIlByb21pc2UiLCJyZXNvbHZlIiwicXVlc3Rpb24iLCJzaWduYXR1cmUiLCJpZCIsImNsb3NlIiwiY21kU3VibWl0IiwiYWNjb3VudCIsImJsb2NrcyIsImVuZHBvaW50IiwidHgiLCJwYXJhbXMiLCJzaWduZXIiLCJwcm92aWRlciIsIldzUHJvdmlkZXIiLCJhcGkiLCJBcGlQcm9taXNlIiwiY3JlYXRlIiwic2VjdGlvbiIsIm1ldGhvZCIsInNwbGl0Iiwib3B0aW9ucyIsImVyYSIsInNpZ25lZEJsb2NrIiwicnBjIiwiY2hhaW4iLCJnZXRCbG9jayIsImJsb2NrSGFzaCIsImJsb2NrIiwiaGVhZGVyIiwiaGFzaCIsImNyZWF0ZVR5cGUiLCJjdXJyZW50IiwibnVtYmVyIiwicGVyaW9kIiwic2lnbkFuZFNlbmQiLCJyZXN1bHQiLCJjb25zb2xlIiwibG9nIiwiSlNPTiIsInN0cmluZ2lmeSIsImlzRmluYWxpemVkIiwiZXhpdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBUUE7O0FBQ0E7O0FBQ0E7O0FBVkE7QUFDQTtBQUNBO0FBVUEsTUFBTUEsU0FBTixDQUFrQztBQUNoQyxRQUFhQyxPQUFiLE9BQXlFO0FBQUEsUUFBbkQ7QUFBRUMsTUFBQUE7QUFBRixLQUFtRDs7QUFDdkUsVUFBTUMsRUFBRSxHQUFHQyxrQkFBU0MsZUFBVCxDQUF5QjtBQUNsQ0MsTUFBQUEsS0FBSyxFQUFFQyxPQUFPLENBQUNDLEtBRG1CO0FBRWxDQyxNQUFBQSxNQUFNLEVBQUVGLE9BQU8sQ0FBQ0c7QUFGa0IsS0FBekIsQ0FBWDs7QUFLQSxXQUFPLElBQUlDLE9BQUosQ0FBYUMsT0FBRCxJQUFtQjtBQUNwQ1QsTUFBQUEsRUFBRSxDQUFDVSxRQUFILG9CQUF3QlgsSUFBeEIsb0JBQThDWSxTQUFELElBQWU7QUFDMURGLFFBQUFBLE9BQU8sQ0FBQztBQUFFRyxVQUFBQSxFQUFFLEVBQUUsQ0FBTjtBQUFTRCxVQUFBQTtBQUFULFNBQUQsQ0FBUDtBQUNBWCxRQUFBQSxFQUFFLENBQUNhLEtBQUg7QUFDRCxPQUhEO0FBSUQsS0FMTSxDQUFQO0FBTUQ7O0FBYitCOztBQWdCbkIsZUFBZUMsU0FBZixDQUEwQkMsT0FBMUIsRUFBMkNDLE1BQTNDLEVBQXVFQyxRQUF2RSxTQUFtSTtBQUFBLE1BQTFDLENBQUNDLEVBQUQsRUFBSyxHQUFHQyxNQUFSLENBQTBDO0FBQ2hKLFFBQU1DLE1BQU0sR0FBRyxJQUFJdkIsU0FBSixFQUFmO0FBQ0EsUUFBTXdCLFFBQVEsR0FBRyxJQUFJQyxlQUFKLENBQWVMLFFBQWYsQ0FBakI7QUFDQSxRQUFNTSxHQUFHLEdBQUcsTUFBTUMsZ0JBQVdDLE1BQVgsQ0FBa0I7QUFBRUosSUFBQUEsUUFBRjtBQUFZRCxJQUFBQTtBQUFaLEdBQWxCLENBQWxCO0FBQ0EsUUFBTSxDQUFDTSxPQUFELEVBQVVDLE1BQVYsSUFBb0JULEVBQUUsQ0FBQ1UsS0FBSCxDQUFTLEdBQVQsQ0FBMUI7QUFFQSxvQkFBT0wsR0FBRyxDQUFDTCxFQUFKLENBQU9RLE9BQVAsS0FBbUJILEdBQUcsQ0FBQ0wsRUFBSixDQUFPUSxPQUFQLEVBQWdCQyxNQUFoQixDQUExQixrQ0FBNEVELE9BQTVFLGNBQXVGQyxNQUF2RjtBQUVBLFFBQU1FLE9BQStCLEdBQUcsRUFBeEM7O0FBQ0EsTUFBSWIsTUFBTSxLQUFLLENBQWYsRUFBa0I7QUFDaEJhLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixHQUFjLENBQWQ7QUFDRCxHQUZELE1BRU8sSUFBSWQsTUFBTSxJQUFJLElBQWQsRUFBb0I7QUFDekI7QUFDQSxVQUFNZSxXQUFXLEdBQUcsTUFBTVIsR0FBRyxDQUFDUyxHQUFKLENBQVFDLEtBQVIsQ0FBY0MsUUFBZCxFQUExQjtBQUVBTCxJQUFBQSxPQUFPLENBQUNNLFNBQVIsR0FBb0JKLFdBQVcsQ0FBQ0ssS0FBWixDQUFrQkMsTUFBbEIsQ0FBeUJDLElBQTdDO0FBQ0FULElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixHQUFjUCxHQUFHLENBQUNnQixVQUFKLENBQWUsY0FBZixFQUErQjtBQUMzQ0MsTUFBQUEsT0FBTyxFQUFFVCxXQUFXLENBQUNLLEtBQVosQ0FBa0JDLE1BQWxCLENBQXlCSSxNQURTO0FBRTNDQyxNQUFBQSxNQUFNLEVBQUUxQjtBQUZtQyxLQUEvQixDQUFkO0FBSUQ7O0FBRUQsUUFBTU8sR0FBRyxDQUFDTCxFQUFKLENBQU9RLE9BQVAsRUFBZ0JDLE1BQWhCLEVBQXdCLEdBQUdSLE1BQTNCLEVBQW1Dd0IsV0FBbkMsQ0FBK0M1QixPQUEvQyxFQUF3RGMsT0FBeEQsRUFBa0VlLE1BQUQsSUFBa0I7QUFDdkZDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFJLENBQUNDLFNBQUwsQ0FBZUosTUFBZixDQUFaOztBQUVBLFFBQUlBLE1BQU0sQ0FBQ0ssV0FBWCxFQUF3QjtBQUN0QjdDLE1BQUFBLE9BQU8sQ0FBQzhDLElBQVIsQ0FBYSxDQUFiO0FBQ0Q7QUFDRixHQU5LLENBQU47QUFPRCIsInNvdXJjZVJvb3QiOiIvYXBwL3BhY2thZ2VzL3NpZ25lci1jbGkvc3JjIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IDIwMTkgQHBvbGthZG90L3NpZ25lci1jbGkgYXV0aG9ycyAmIGNvbnRyaWJ1dG9yc1xuLy8gVGhpcyBzb2Z0d2FyZSBtYXkgYmUgbW9kaWZpZWQgYW5kIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtc1xuLy8gb2YgdGhlIEFwYWNoZS0yLjAgbGljZW5zZS4gU2VlIHRoZSBMSUNFTlNFIGZpbGUgZm9yIGRldGFpbHMuXG5cbmltcG9ydCB7IFNpZ25lciwgU2lnbmVyUmVzdWx0IH0gZnJvbSAnQHBvbGthZG90L2FwaS90eXBlcyc7XG5pbXBvcnQgeyBTaWduZXJPcHRpb25zIH0gZnJvbSAnQHBvbGthZG90L2FwaS9zdWJtaXR0YWJsZS90eXBlcyc7XG5pbXBvcnQgeyBTaWduZXJQYXlsb2FkUmF3IH0gZnJvbSAnQHBvbGthZG90L3R5cGVzL3R5cGVzJztcblxuaW1wb3J0IHJlYWRsaW5lIGZyb20gJ3JlYWRsaW5lJztcbmltcG9ydCB7IEFwaVByb21pc2UsIFdzUHJvdmlkZXIgfSBmcm9tICdAcG9sa2Fkb3QvYXBpJztcbmltcG9ydCB7IGFzc2VydCB9IGZyb20gJ0Bwb2xrYWRvdC91dGlsJztcblxuY2xhc3MgUmF3U2lnbmVyIGltcGxlbWVudHMgU2lnbmVyIHtcbiAgcHVibGljIGFzeW5jIHNpZ25SYXcgKHsgZGF0YSB9OiBTaWduZXJQYXlsb2FkUmF3KTogUHJvbWlzZTxTaWduZXJSZXN1bHQ+IHtcbiAgICBjb25zdCBybCA9IHJlYWRsaW5lLmNyZWF0ZUludGVyZmFjZSh7XG4gICAgICBpbnB1dDogcHJvY2Vzcy5zdGRpbixcbiAgICAgIG91dHB1dDogcHJvY2Vzcy5zdGRvdXRcbiAgICB9KTtcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSk6IHZvaWQgPT4ge1xuICAgICAgcmwucXVlc3Rpb24oYFBheWxvYWQ6ICR7ZGF0YX1cXG5TaWduYXR1cmU+IGAsIChzaWduYXR1cmUpID0+IHtcbiAgICAgICAgcmVzb2x2ZSh7IGlkOiAxLCBzaWduYXR1cmUgfSk7XG4gICAgICAgIHJsLmNsb3NlKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBjbWRTdWJtaXQgKGFjY291bnQ6IHN0cmluZywgYmxvY2tzOiBudW1iZXIgfCB1bmRlZmluZWQsIGVuZHBvaW50OiBzdHJpbmcsIFt0eCwgLi4ucGFyYW1zXTogc3RyaW5nW10pOiBQcm9taXNlPHZvaWQ+IHtcbiAgY29uc3Qgc2lnbmVyID0gbmV3IFJhd1NpZ25lcigpO1xuICBjb25zdCBwcm92aWRlciA9IG5ldyBXc1Byb3ZpZGVyKGVuZHBvaW50KTtcbiAgY29uc3QgYXBpID0gYXdhaXQgQXBpUHJvbWlzZS5jcmVhdGUoeyBwcm92aWRlciwgc2lnbmVyIH0pO1xuICBjb25zdCBbc2VjdGlvbiwgbWV0aG9kXSA9IHR4LnNwbGl0KCcuJyk7XG5cbiAgYXNzZXJ0KGFwaS50eFtzZWN0aW9uXSAmJiBhcGkudHhbc2VjdGlvbl1bbWV0aG9kXSwgYFVuYWJsZSB0byBmaW5kIG1ldGhvZCAke3NlY3Rpb259LiR7bWV0aG9kfWApO1xuXG4gIGNvbnN0IG9wdGlvbnM6IFBhcnRpYWw8U2lnbmVyT3B0aW9ucz4gPSB7fTtcbiAgaWYgKGJsb2NrcyA9PT0gMCkge1xuICAgIG9wdGlvbnMuZXJhID0gMDtcbiAgfSBlbHNlIGlmIChibG9ja3MgIT0gbnVsbCkge1xuICAgIC8vIEdldCBjdXJyZW50IGJsb2NrIGlmIHdlIHdhbnQgdG8gbW9kaWZ5IHRoZSBudW1iZXIgb2YgYmxvY2tzIHdlIGhhdmUgdG8gc2lnblxuICAgIGNvbnN0IHNpZ25lZEJsb2NrID0gYXdhaXQgYXBpLnJwYy5jaGFpbi5nZXRCbG9jaygpO1xuXG4gICAgb3B0aW9ucy5ibG9ja0hhc2ggPSBzaWduZWRCbG9jay5ibG9jay5oZWFkZXIuaGFzaDtcbiAgICBvcHRpb25zLmVyYSA9IGFwaS5jcmVhdGVUeXBlKCdFeHRyaW5zaWNFcmEnLCB7XG4gICAgICBjdXJyZW50OiBzaWduZWRCbG9jay5ibG9jay5oZWFkZXIubnVtYmVyLFxuICAgICAgcGVyaW9kOiBibG9ja3NcbiAgICB9KTtcbiAgfVxuXG4gIGF3YWl0IGFwaS50eFtzZWN0aW9uXVttZXRob2RdKC4uLnBhcmFtcykuc2lnbkFuZFNlbmQoYWNjb3VudCwgb3B0aW9ucywgKHJlc3VsdCk6IHZvaWQgPT4ge1xuICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KHJlc3VsdCkpO1xuXG4gICAgaWYgKHJlc3VsdC5pc0ZpbmFsaXplZCkge1xuICAgICAgcHJvY2Vzcy5leGl0KDApO1xuICAgIH1cbiAgfSk7XG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "cmdSubmit.ts"
      ],
      "names": [
        "RawSigner",
        "signRaw",
        "data",
        "rl",
        "readline",
        "createInterface",
        "input",
        "process",
        "stdin",
        "output",
        "stdout",
        "Promise",
        "resolve",
        "question",
        "signature",
        "id",
        "close",
        "cmdSubmit",
        "account",
        "blocks",
        "endpoint",
        "tx",
        "params",
        "signer",
        "provider",
        "WsProvider",
        "api",
        "ApiPromise",
        "create",
        "section",
        "method",
        "split",
        "options",
        "era",
        "signedBlock",
        "rpc",
        "chain",
        "getBlock",
        "blockHash",
        "block",
        "header",
        "hash",
        "createType",
        "current",
        "number",
        "period",
        "signAndSend",
        "result",
        "console",
        "log",
        "JSON",
        "stringify",
        "isFinalized",
        "exit"
      ],
      "mappings": ";;;;;;;;;AAQA;;AACA;;AACA;;AAVA;AACA;AACA;AAUA,MAAMA,SAAN,CAAkC;AAChC,QAAaC,OAAb,OAAyE;AAAA,QAAnD;AAAEC,MAAAA;AAAF,KAAmD;;AACvE,UAAMC,EAAE,GAAGC,kBAASC,eAAT,CAAyB;AAClCC,MAAAA,KAAK,EAAEC,OAAO,CAACC,KADmB;AAElCC,MAAAA,MAAM,EAAEF,OAAO,CAACG;AAFkB,KAAzB,CAAX;;AAKA,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAmB;AACpCT,MAAAA,EAAE,CAACU,QAAH,oBAAwBX,IAAxB,oBAA8CY,SAAD,IAAe;AAC1DF,QAAAA,OAAO,CAAC;AAAEG,UAAAA,EAAE,EAAE,CAAN;AAASD,UAAAA;AAAT,SAAD,CAAP;AACAX,QAAAA,EAAE,CAACa,KAAH;AACD,OAHD;AAID,KALM,CAAP;AAMD;;AAb+B;;AAgBnB,eAAeC,SAAf,CAA0BC,OAA1B,EAA2CC,MAA3C,EAAuEC,QAAvE,SAAmI;AAAA,MAA1C,CAACC,EAAD,EAAK,GAAGC,MAAR,CAA0C;AAChJ,QAAMC,MAAM,GAAG,IAAIvB,SAAJ,EAAf;AACA,QAAMwB,QAAQ,GAAG,IAAIC,eAAJ,CAAeL,QAAf,CAAjB;AACA,QAAMM,GAAG,GAAG,MAAMC,gBAAWC,MAAX,CAAkB;AAAEJ,IAAAA,QAAF;AAAYD,IAAAA;AAAZ,GAAlB,CAAlB;AACA,QAAM,CAACM,OAAD,EAAUC,MAAV,IAAoBT,EAAE,CAACU,KAAH,CAAS,GAAT,CAA1B;AAEA,oBAAOL,GAAG,CAACL,EAAJ,CAAOQ,OAAP,KAAmBH,GAAG,CAACL,EAAJ,CAAOQ,OAAP,EAAgBC,MAAhB,CAA1B,kCAA4ED,OAA5E,cAAuFC,MAAvF;AAEA,QAAME,OAA+B,GAAG,EAAxC;;AACA,MAAIb,MAAM,KAAK,CAAf,EAAkB;AAChBa,IAAAA,OAAO,CAACC,GAAR,GAAc,CAAd;AACD,GAFD,MAEO,IAAId,MAAM,IAAI,IAAd,EAAoB;AACzB;AACA,UAAMe,WAAW,GAAG,MAAMR,GAAG,CAACS,GAAJ,CAAQC,KAAR,CAAcC,QAAd,EAA1B;AAEAL,IAAAA,OAAO,CAACM,SAAR,GAAoBJ,WAAW,CAACK,KAAZ,CAAkBC,MAAlB,CAAyBC,IAA7C;AACAT,IAAAA,OAAO,CAACC,GAAR,GAAcP,GAAG,CAACgB,UAAJ,CAAe,cAAf,EAA+B;AAC3CC,MAAAA,OAAO,EAAET,WAAW,CAACK,KAAZ,CAAkBC,MAAlB,CAAyBI,MADS;AAE3CC,MAAAA,MAAM,EAAE1B;AAFmC,KAA/B,CAAd;AAID;;AAED,QAAMO,GAAG,CAACL,EAAJ,CAAOQ,OAAP,EAAgBC,MAAhB,EAAwB,GAAGR,MAA3B,EAAmCwB,WAAnC,CAA+C5B,OAA/C,EAAwDc,OAAxD,EAAkEe,MAAD,IAAkB;AACvFC,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAAZ;;AAEA,QAAIA,MAAM,CAACK,WAAX,EAAwB;AACtB7C,MAAAA,OAAO,CAAC8C,IAAR,CAAa,CAAb;AACD;AACF,GANK,CAAN;AAOD",
      "sourceRoot": "/app/packages/signer-cli/src",
      "sourcesContent": [
        "// Copyright 2019 @polkadot/signer-cli authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nimport { Signer, SignerResult } from '@polkadot/api/types';\nimport { SignerOptions } from '@polkadot/api/submittable/types';\nimport { SignerPayloadRaw } from '@polkadot/types/types';\n\nimport readline from 'readline';\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport { assert } from '@polkadot/util';\n\nclass RawSigner implements Signer {\n  public async signRaw ({ data }: SignerPayloadRaw): Promise<SignerResult> {\n    const rl = readline.createInterface({\n      input: process.stdin,\n      output: process.stdout\n    });\n\n    return new Promise((resolve): void => {\n      rl.question(`Payload: ${data}\\nSignature> `, (signature) => {\n        resolve({ id: 1, signature });\n        rl.close();\n      });\n    });\n  }\n}\n\nexport default async function cmdSubmit (account: string, blocks: number | undefined, endpoint: string, [tx, ...params]: string[]): Promise<void> {\n  const signer = new RawSigner();\n  const provider = new WsProvider(endpoint);\n  const api = await ApiPromise.create({ provider, signer });\n  const [section, method] = tx.split('.');\n\n  assert(api.tx[section] && api.tx[section][method], `Unable to find method ${section}.${method}`);\n\n  const options: Partial<SignerOptions> = {};\n  if (blocks === 0) {\n    options.era = 0;\n  } else if (blocks != null) {\n    // Get current block if we want to modify the number of blocks we have to sign\n    const signedBlock = await api.rpc.chain.getBlock();\n\n    options.blockHash = signedBlock.block.header.hash;\n    options.era = api.createType('ExtrinsicEra', {\n      current: signedBlock.block.header.number,\n      period: blocks\n    });\n  }\n\n  await api.tx[section][method](...params).signAndSend(account, options, (result): void => {\n    console.log(JSON.stringify(result));\n\n    if (result.isFinalized) {\n      process.exit(0);\n    }\n  });\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575322425000
  }
}