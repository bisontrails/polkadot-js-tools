"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MetaRegistryItem = exports.MetaTypeInfo = exports.TypeDefInfo = void 0;
// Copyright 2017-2019 @polkadot/types authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
// Type which says: if `K` is in the InterfaceRegistry, then return InterfaceRegistry[K], else fallback to T
let TypeDefInfo;
exports.TypeDefInfo = TypeDefInfo;

(function (TypeDefInfo) {
  TypeDefInfo[TypeDefInfo["BTreeMap"] = 0] = "BTreeMap";
  TypeDefInfo[TypeDefInfo["Compact"] = 1] = "Compact";
  TypeDefInfo[TypeDefInfo["Enum"] = 2] = "Enum";
  TypeDefInfo[TypeDefInfo["Linkage"] = 3] = "Linkage";
  TypeDefInfo[TypeDefInfo["Option"] = 4] = "Option";
  TypeDefInfo[TypeDefInfo["Plain"] = 5] = "Plain";
  TypeDefInfo[TypeDefInfo["Result"] = 6] = "Result";
  TypeDefInfo[TypeDefInfo["Set"] = 7] = "Set";
  TypeDefInfo[TypeDefInfo["Struct"] = 8] = "Struct";
  TypeDefInfo[TypeDefInfo["Tuple"] = 9] = "Tuple";
  TypeDefInfo[TypeDefInfo["Vec"] = 10] = "Vec";
  TypeDefInfo[TypeDefInfo["VecFixed"] = 11] = "VecFixed";
  TypeDefInfo[TypeDefInfo["Null"] = 12] = "Null";
})(TypeDefInfo || (exports.TypeDefInfo = TypeDefInfo = {}));

let MetaTypeInfo;
exports.MetaTypeInfo = MetaTypeInfo;

(function (MetaTypeInfo) {
  MetaTypeInfo[MetaTypeInfo["BuiltinPlain"] = 0] = "BuiltinPlain";
  MetaTypeInfo[MetaTypeInfo["BuiltinTuple"] = 1] = "BuiltinTuple";
  MetaTypeInfo[MetaTypeInfo["BuiltinVec"] = 2] = "BuiltinVec";
  MetaTypeInfo[MetaTypeInfo["BuiltinVecFixed"] = 3] = "BuiltinVecFixed";
  MetaTypeInfo[MetaTypeInfo["Enum"] = 4] = "Enum";
  MetaTypeInfo[MetaTypeInfo["ClikeEnum"] = 5] = "ClikeEnum";
  MetaTypeInfo[MetaTypeInfo["Struct"] = 6] = "Struct";
  MetaTypeInfo[MetaTypeInfo["TupleStruct"] = 7] = "TupleStruct";
  MetaTypeInfo[MetaTypeInfo["Null"] = 8] = "Null";
})(MetaTypeInfo || (exports.MetaTypeInfo = MetaTypeInfo = {}));

let MetaRegistryItem;
exports.MetaRegistryItem = MetaRegistryItem;

(function (MetaRegistryItem) {
  MetaRegistryItem[MetaRegistryItem["String"] = 0] = "String";
  MetaRegistryItem[MetaRegistryItem["Type"] = 1] = "Type";
  MetaRegistryItem[MetaRegistryItem["TypeDef"] = 2] = "TypeDef";
})(MetaRegistryItem || (exports.MetaRegistryItem = MetaRegistryItem = {}));